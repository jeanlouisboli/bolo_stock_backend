// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


enum Role {
  CLIENT
  ENTREPRISE
}

model User{
  id   Int @id @default(autoincrement())
  username   String @unique
  email String @unique
  password String?
  role Role 
  orders Orders[]
  Shop Shop[]


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt  DateTime?

  @@map("t_user")

}

model Shop{
  id Int @id @default(autoincrement())
  name String
  email String 
  adresse String
  ville String
  pays String
  latitude   Float?
  longitude  Float?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  userId Int?
  user User? @relation(fields: [userId], references: [id])

  product Product[]

  @@map("t_shop")
}


model Product{
  id Int @id @default(autoincrement())
  libelle String
  stock Int
  prix Int

  shopId Int 
  shop Shop @relation(fields: [shopId], references: [id])

  dateExpire DateTime 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  Orders Orders[]

  @@map("t_product")
}




model Orders{
  id Int @id @default(autoincrement())

  userId Int 
  user User @relation(fields: [userId], references: [id])

  productId Int
  product Product @relation(fields: [productId], references: [id])

  quantite Int
  prix Int 

  nomClient String
  numeroTelephone String
  email String
  
 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 

  @@map("t_orders") 
}





